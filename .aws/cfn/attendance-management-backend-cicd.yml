AWSTemplateFormatVersion: 2010-09-09

# 各種パラメータ
Parameters:
  AccountID:
    Type: String

# 各種リソース
Resources:

  # ECRのRepositoryを作成
  # リポジトリポリシーに特定のアカウントからのアクセスのみを許可するように設定
  Repository:
    Type: AWS::ECR::Repository
    Properties:
      ImageScanningConfiguration:
        ScanOnPush: true
      RepositoryName: "attendance-management-backend"
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Sid: BackendRepositoryPolicy
            Effect: "Allow"
            Principal:
              AWS:
                - !Sub "arn:aws:iam::${AccountID}:root"
            Action:
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"

  EnvoyRepository:
    Type: AWS::ECR::Repository
    Properties:
      ImageScanningConfiguration:
        ScanOnPush: true
      RepositoryName: "attendance-management-envoy"
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Sid: BackendRepositoryPolicy
            Effect: "Allow"
            Principal:
              AWS:
                - !Sub "arn:aws:iam::${AccountID}:root"
            Action:
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"

  # CI/CDで作成したアーティファクトを吐き出すためのバケット
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: attendance-management-backend-artifact
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # CodePipelineに適用するIAMRole
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: BackendPipelineServiceRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: BackendPipelineServicePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:PutObjectAcl'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketVersioning'
              - Resource: "*"
                Effect: Allow
                Action:
                  - 'iam:PassRole'
                  - 'codestar-connections:UseConnection'
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'

  # CodeBuildに適用するIAMRole
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: BackendBuildServiceRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: BackendPipelineServicePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:GetObjectVersion'
              - Resource: "*"
                Effect: Allow
                Action:
                  - 'cloudwatch:*'
                  - 'logs:*'
                  - 'codestar-connections:UseConnection'
                  - 'ecr:GetAuthorizationToken'
                  - 'ecr:InitiateLayerUpload'
                  - 'ecr:UploadLayerPart'
                  - 'ecr:CompleteLayerUpload'
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:PutImage'

  # CodeBuildの設定
  CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: attendance-management-backend-build
      ServiceRole: !Ref CodeBuildServiceRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: ./.aws/buildspec.yml
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: CONTAINER_NAME
            Type: PLAINTEXT
            Value: app

  # CodePipelineをgithubと接続するための設定
  GitHubConnection:
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ConnectionName: GitHubConnection
      ProviderType: GitHub

  # CodePipelineの設定
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: attendance-management-backend-pipeline
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceActions
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeStarSourceConnection
              Configuration:
                FullRepositoryId: "SpaghettiMan03/attendance-management-backend"
                BranchName: 'master'
                ConnectionArn: !Ref GitHubConnection
                OutputArtifactFormat: CODEBUILD_CLONE_REF
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: Build
          Actions:
            - Name: BuildActions
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuild
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact